The "0-add_integer" module
======================

Using "add_integer"
-------------------

This test text file in for function add_integer.  First import
"add_integer" from the "0-add_integer" module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(1, 2)
    3
    >>> add_integer(100, -2)
    98
    >>> add_integer(2)
    100
    >>> add_integer(100.3, -2)
    98
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer
    >>> add_integer(4, -500.2)
    -496
    >>> add_integer(4, None)
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'
    >>> add_integer(1, b)
    Traceback (most recent call last):
    ...
    NameError: name 'b' is not defined
    >>> add_integer(01, 2)
    Traceback (most recent call last):
    ...
    SyntaxError: invalid token
    >>> add_integer(1,2, 2)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
    >>> add_integer(1**2, 3*4)
    13
    >>> add_integer(1/0,3)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero
    >>> add_integer(a = 2, b = 3)
    5
    >>> add_integer(ab = 2, b = 3)
    Traceback (most recent call last):
    ...
    TypeError: add_integer() got an unexpected keyword argument 'ab'
    >>> add_integer(6 // 2)
    101
    >>> add_integer(6 // 2, 5)
    8
    >>> add_integer(a = 2,3)
    Traceback (most recent call last):
    ...
    SyntaxError: positional argument follows keyword argument
